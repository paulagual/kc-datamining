---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

```{r}
head(df_seeds)
```

```{r}
summary(df_seeds)
```

```{r}
str(df_seeds)
```

```{r}
paste("En el dataframe df_seeds hay", sum(is.na(df_seeds)), "NAs")
```

#### PREGUNTA 1

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
paste("El número de filas del dataframe df_seeds es",nrow(df_seeds))
paste("El número de columnas del dataframe df_seeds es",ncol(df_seeds))
```

#### PREGUNTA 2

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
df_seeds |> mutate(tipo=factor(tipo,labels=c("Kama", "Rosa", "Canadian"))) -> df_seeds 
summary(df_seeds)
```

#### PREGUNTA 3

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
df_seeds |>
  group_by(tipo) |>
  summarise(media_area=mean(area))
```

#### PREGUNTA 4

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**:

-   El gráfico es un *boxplot*.

-   La linea del centro de la caja representa la *mediana*.

#### PREGUNTA 5

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
ggplot(df_seeds, aes(x=compacto, y=area, color=tipo))+
  geom_point()+
  xlab('Compacto')+ylab('Área')+
  ggtitle("Scatterplot Semillas Compacto-Area.", subtitle = "Color en función del Tipo")+
  labs(color = "Tipo de Semilla:")+
  theme_bw()+
  theme(legend.position="bottom")
```

#### PREGUNTA 6

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**: - La línea de código crea una *columna nueva* que indica con un booleano si ese registro es de tipo Karma o no, dándole valores TRUE y FALSE.

#### PREGUNTA 7

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: - Es aconsejable dividir el dataset en train y test para entrenar el modelo con los datos de train, y comprobar que ese modelo funciona con datos que nunca ha visto, los datos de test. Es decir, para que el modelo funcione de manera generalista, y no solo específicamente con los datos del dataset.

#### PREGUNTA 8

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**:

-   Para realizar una clasificación binaria, puedo usar un algoritmo de clasificación binaria como puede ser la **regresión logística**. - En R podemos usar el algoritmo: **glm** con la familia **binomial**.

#### PREGUNTA 9

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
model<-glm(data=df_seeds_train,formula=is_kama~area+perimetro+compacto+longitud+coeficient.asimetria+longitud.ranura,family=binomial(link='logit'))

betalg<-model$coefficients
summary(model)
```

```{r}
M<-matrix(rep(0,4),ncol = 2)
umbral <- 0
seeds_predict  <- predict(model,df_seeds_test)
y_est=factor(ifelse(seeds_predict < umbral,0,1),labels=c("Kama","No Kama"))


M = table(real=df_seeds_test$is_kama,elegimos=y_est)
M

fscore<-function(M,beta){
    pr=M[1,1]/(M[1,2]+M[1,1])
    rc=M[1,1]/(M[2,1]+M[1,1])
    (1+beta^2)*pr*rc/(beta^2*pr+rc)
}

paste("La precisión es:",M[2,2]/(M[1,2]+M[2,2]))
paste("La exhaustividad es:",M[2,2]/(M[2,1]+M[2,2]))
```

#### PREGUNTA 10

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
umbral <- 0.5
pred_test<-predict(model, df_seeds_test, type="response")
M=table(real=df_seeds_test$is_kama, pred=pred_test>umbral)
M
```

```{r}
paste("La precisión es:",M[2,2]/(M[1,2]+M[2,2]))
paste("La exhaustividad es:",M[2,2]/(M[2,1]+M[2,2]))
```

#### PREGUNTA 11

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: - EL. código. crea un modeelo de clusterización con el algoritmo de kmeans, al que se le piden 3 clusters. Y posteriormente se comparan en una matriz con los valores reales.
